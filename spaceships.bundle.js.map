{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vector-3d.ts","webpack:///./src/webgl.ts","webpack:///./node_modules/preact/dist/preact.mjs","webpack:///./src/get-element.ts","webpack:///./src/points-3d-renderer.ts","webpack:///./src/matrix-3d.ts","webpack:///./src/points-3d.ts","webpack:///./src/spaceships/main.tsx","webpack:///./src/spaceships/app-ui.tsx","webpack:///./src/keyboard.tsx","webpack:///./src/spaceships/app.ts","webpack:///./src/invertible-transforms-3d.ts","webpack:///./src/spaceships/shapes.ts","webpack:///./src/screen-space.ts","webpack:///./src/ray-3d.ts","webpack:///./src/intersections.ts","webpack:///./src/color.ts","webpack:///./src/spaceships/simple-vertex-shader.glsl","webpack:///./src/spaceships/simple-fragment-shader.glsl"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vector3D","[object Object]","x","y","z","w","this","v","len","Math","sqrt","createShader","gl","type","source","shader","Error","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","msg","getShaderInfoLog","deleteShader","getAttribLocation","program","loc","GlProgram","vertexShaderSrc","fragmentShaderSrc","vertexShader","WebGLRenderingContext","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","useProgram","GlUniformBase","location","getUniformLocation","GlUniformVector3D","uniform4fv","GlUniformFloat","uniform1f","GlUniformMatrix3D","uniformMatrix4fv","toFloat32Array","GlUniformBoolean","isPowerOfTwo","log2","floor","GlUniformInteger","uniform1i","setupBuffer","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","setupTexture","pixels","width","height","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","generateMipmap","texParameteri","TEXTURE_MAG_FILTER","NEAREST","__webpack_exports__","h","cloneElement","Component","render","rerender","options","VNode","stack","EMPTY_CHILDREN","nodeName","attributes","lastSimple","child","simple","children","arguments","length","push","pop","undefined","String","vnode","extend","obj","props","defer","Promise","resolve","then","setTimeout","slice","IS_NON_DIMENSIONAL","items","enqueueRender","component","_dirty","debounceRendering","list","renderComponent","isSameNodeType","node","hydrating","splitText","_componentConstructor","isNamedNode","normalizedNodeName","toLowerCase","getNodeProps","defaultProps","removeNode","parentNode","removeChild","setAccessor","old","isSvg","style","cssText","test","innerHTML","__html","useCapture","replace","substring","addEventListener","eventProxy","removeEventListener","_listeners","e","removeAttribute","removeAttributeNS","setAttributeNS","setAttribute","className","event","mounts","diffLevel","isSvgMode","flushMounts","afterMount","componentDidMount","diff","dom","context","mountAll","parent","componentRoot","ownerSVGElement","ret","idiff","appendChild","out","prevSvgMode","_component","nodeValue","document","createTextNode","replaceChild","recollectNodeTree","vnodeName","originalComponent","oldDom","isDirectOwner","isOwner","_parentComponent","constructor","setComponentProps","base","unmountComponent","createComponent","nextBase","buildComponentFromVNode","createElementNS","createElement","createNode","firstChild","fc","vchildren","a","nextSibling","isHydrating","j","f","vchild","originalChildren","childNodes","keyed","keyedLen","min","childrenLen","vlen","_child","__key","trim","insertBefore","innerDiffNode","dangerouslySetInnerHTML","attrs","diffAttributes","unmountOnly","ref","removeChildren","lastChild","next","previousSibling","recyclerComponents","Ctor","inst","doRender","splice","state","renderMode","_disable","__ref","getDerivedStateFromProps","componentWillMount","componentWillReceiveProps","prevContext","prevProps","syncComponentUpdates","isChild","rendered","cbase","previousProps","previousState","prevState","previousContext","isUpdate","initialBase","initialChildComponent","skip","snapshot","shouldComponentUpdate","componentWillUpdate","getChildContext","getSnapshotBeforeUpdate","toUnmount","childComponent","childProps","baseParent","componentRef","unshift","componentDidUpdate","afterUpdate","_renderCallbacks","beforeUnmount","componentWillUnmount","inner","merge","setState","callback","forceUpdate","preact","getElement","tagName","selector","finalSelector","querySelector","webgl_1","Points3DRenderer","points","positionAttributeLocation","enableVertexAttribArray","FLOAT","vertexAttribPointer","primitiveType","TRIANGLES","count","drawArrays","vector_3d_1","IDENTITY","Matrix3D","values","valueAt","Float32Array","row","column","fromVectorOrCoords","multiply","radians","cos","sin","m2","col1","transformVector","col2","col3","col4","map","near","far","left","right","top","bottom","depth","doubleNear","col","Points3D","array","result","arrIndex","combined","concat","fn","numPoints","pointArray","Array","preact_1","app_ui_1","get_element_1","app_1","window","app","App","run","AppUi","keyboard_1","Checkbox","handleToggle","onToggle","checked","onClick","label","hotkey","Hotkey","onPressed","super","getUi","dispatchAction","ui","showColliders","isPaused","showZBuffer","enableLighting","KeyboardMap","mapping","Map","body","handleEvent","handler","set","delete","globalKeyboardMapping","handlePress","unset","toUpperCase","points_3d_renderer_1","matrix_3d_1","invertible_transforms_3d_1","shapes_1","screen_space_1","ray_3d_1","intersections_1","color_1","simpleVertexShaderSrc","zBufferFragmentShaderSrc","PURPLE","Color","fromHex","BLUE","SimpleGlProgram","projectionTransform","viewTransform","modelTransform","color","light","normal","shade","Spaceship","colliderScale","transform","rotateZ","orbitTheta","translate","distanceFromCenter","scale","rotateY","shipTheta","random","orbitThetaVelocity","shipThetaVelocity","colliderRadius","ray","getRaySphereIntersection","center","CameraRay","cameraPosition","cameraTransform","matrix","screenPointInWorld","screenCoordsToWorld","canvas","coords","perspective","Ray3D","fromTo","Scene","perspectiveProjection","InvertibleTransforms3D","cameraRotation","inverse","spaceships","ship","update","withColor","doesRayIntersect","queuedActions","getContext","spaceshipRenderer","makeSpaceship","groundRenderer","makeGround","circleRenderer","makeCircle","getBoundingClientRect","offsetX","offsetY","point","action","scene","viewport","enable","DEPTH_TEST","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","activate","BLACK","setupForDrawing","draw","LINES","forEach","spaceship","getColliderTransform","baseModelTransform","modelTransformUniform","renderer","rotateX","PI","LINE_LOOP","drawCollider","shootRay","amount","createRandom","createRandomSpaceships","createInitialScene","updateFrame","actions","processAction","requestAnimationFrame","ops","op","vector","addOp","times","inverseOp","points_3d_1","mirror","leftHalf","transformPoints","fromArray","xzStart","size","pointsPerAxis","xPart","zPart","partInc","segments","start","pointRelativeToCamera","xPct","yPct","screenCoordsToEye","origin","direction","normalize","plus","from","to","minus","radius","originMinusCenter","b","dot","bSquaredMinusC","filter","closestT","sort","pointAlong","red","green","blue","alpha","hex","toFloat","parseInt","substr"],"mappings":"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","file":"spaceships.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/**\n * A three-dimensional vector. Note that it actually has\n * four elements because we use a homogeneous coordinate\n * system.\n */\nexport class Vector3D {\n  constructor(\n    readonly x: number = 0,\n    readonly y: number = 0,\n    readonly z: number = 0,\n    readonly w: number = 1.0\n  ) {}\n\n  perspectiveDivide(): Vector3D {\n    const { x, y, z, w } = this;\n    return new Vector3D(x / w, y / w, z / w);\n  }\n\n  minus(v: Vector3D): Vector3D {\n    const { x, y, z, w } = this;\n    return new Vector3D(x - v.x, y - v.y, z - v.z, w);\n  }\n\n  plus(v: Vector3D): Vector3D {\n    const { x, y, z, w } = this;\n    return new Vector3D(x + v.x, y + v.y, z + v.z, w);\n  }\n\n  times(n: number): Vector3D {\n    const { x, y, z, w } = this;\n    return new Vector3D(x * n, y * n, z * n, w);\n  }\n\n  dot(v: Vector3D): number {\n    const { x, y, z, w } = this;\n\n    return x * v.x + y * v.y + z * v.z;\n  }\n\n  normalize(): Vector3D {\n    const { x, y, z, w } = this;\n    const len = Math.sqrt(x * x + y * y + z * z);\n    return new Vector3D(x / len, y / len, z / len, w);\n  }\n\n  /**\n   * A helper to convert either a vector or a sequence of coordinates\n   * into a vector.\n   */\n  static fromVectorOrCoords(x: Vector3D | number, y?: number, z?: number): Vector3D {\n    z = x instanceof Vector3D ? x.z : z || 0;\n    y = x instanceof Vector3D ? x.y : y || 0;\n    x = x instanceof Vector3D ? x.x : x;\n    return new Vector3D(x, y, z);\n  }\n}","import { Matrix3D } from \"./matrix-3d\";\nimport { Vector3D } from \"./vector-3d\";\n\nfunction createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader {\n  const shader = gl.createShader(type);\n  if (!shader) throw new Error(\"gl.createShader() failed!\");\n\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!success) {\n    const msg = \"Compiling shader failed: \" + gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    throw new Error(msg);\n  }\n\n  return shader;\n}\n\nfunction createProgram(gl: WebGLRenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader): WebGLProgram {\n  const program = gl.createProgram();\n  if (!program) throw new Error(\"gl.createProgram() failed!\");\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!success) {\n    const msg = \"Linking program failed: \" + gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(msg);\n  }\n\n  return program;\n}\n\nfunction getUniformLocation(gl: WebGLRenderingContext, program: WebGLProgram, name: string): WebGLUniformLocation {\n  const loc = gl.getUniformLocation(program, name);\n\n  if (loc === null) {\n    throw new Error(`Unable to find uniform '${name}'!`);\n  }\n\n  return loc;\n}\n\nexport function getAttribLocation(gl: WebGLRenderingContext, program: WebGLProgram, name: string): number {\n  const loc = gl.getAttribLocation(program, name);\n\n  if (loc === -1) {\n    throw new Error(`Unable to find attribute '${name}'!`);\n  }\n\n  return loc;\n}\n\nexport class GlProgram {\n  readonly program: WebGLProgram;\n\n  constructor(readonly gl: WebGLRenderingContext, vertexShaderSrc: string, fragmentShaderSrc: string) {\n    const vertexShader = createShader(gl, WebGLRenderingContext.VERTEX_SHADER, vertexShaderSrc);\n    const fragmentShader = createShader(gl, WebGLRenderingContext.FRAGMENT_SHADER, fragmentShaderSrc);\n    this.program = createProgram(gl, vertexShader, fragmentShader);\n  }\n\n  activate() {\n    this.gl.useProgram(this.program);\n  }\n}\n\nclass GlUniformBase {\n  location: WebGLUniformLocation;\n\n  constructor(readonly program: GlProgram, name: string) {\n    this.location = getUniformLocation(program.gl, program.program, name);\n  }\n}\n\nexport class GlUniformVector3D extends GlUniformBase {\n  set(value: Vector3D) {\n    this.program.gl.uniform4fv(this.location, [value.x, value.y, value.z, value.w]);\n  }\n}\n\nexport class GlUniformFloat extends GlUniformBase {\n  set(value: number) {\n    this.program.gl.uniform1f(this.location, value);\n  }\n}\n\nexport class GlUniformMatrix3D extends GlUniformBase {\n  set(value: Matrix3D) {\n    this.program.gl.uniformMatrix4fv(this.location, false, value.toFloat32Array());\n  }\n}\n\nexport class GlUniformBoolean extends GlUniformBase {\n  set(value: boolean) {\n    this.program.gl.uniform1f(this.location, value ? 1 : 0);\n  }\n}\n\nexport class GlUniformInteger extends GlUniformBase {\n  set(value: number) {\n    this.program.gl.uniform1i(this.location, value);\n  }\n}\n\nexport function setupBuffer(gl: WebGLRenderingContext, value: Float32Array): WebGLBuffer {\n  const buffer = gl.createBuffer();\n\n  if (buffer === null) {\n    throw new Error(\"gl.createBuffer() failed!\");\n  }\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, value, gl.STATIC_DRAW);\n\n  return buffer;\n}\n\nfunction isPowerOfTwo(value: number): boolean {\n  const log2 = Math.log2(value);\n  return log2 === Math.floor(log2);\n}\n\nexport function setupTexture(gl: WebGLRenderingContext, pixels: ArrayBufferView, width: number, height?: number): WebGLTexture {\n  const texture = gl.createTexture();\n\n  if (texture === null) {\n    throw new Error(\"gl.createTexture() failed!\");\n  }\n\n  if (!height) {\n    height = width;\n  }\n\n  if (!(isPowerOfTwo(width) && isPowerOfTwo(height))) {\n    throw new Error(\"Texture dimensions must be powers of two!\");\n  }\n\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n  gl.generateMipmap(gl.TEXTURE_2D);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n  return texture;\n}\n","var VNode = function VNode() {};\n\nvar options = {};\n\nvar stack = [];\n\nvar EMPTY_CHILDREN = [];\n\nfunction h(nodeName, attributes) {\n\tvar children = EMPTY_CHILDREN,\n\t    lastSimple,\n\t    child,\n\t    simple,\n\t    i;\n\tfor (i = arguments.length; i-- > 2;) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children != null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\n\t\t\tfor (i = child.length; i--;) {\n\t\t\t\tstack.push(child[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof child === 'boolean') child = null;\n\n\t\t\tif (simple = typeof nodeName !== 'function') {\n\t\t\t\tif (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length - 1] += child;\n\t\t\t} else if (children === EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t} else {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tvar p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes == null ? undefined : attributes;\n\tp.key = attributes == null ? undefined : attributes.key;\n\n\tif (options.vnode !== undefined) options.vnode(p);\n\n\treturn p;\n}\n\nfunction extend(obj, props) {\n  for (var i in props) {\n    obj[i] = props[i];\n  }return obj;\n}\n\nvar defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n\nfunction cloneElement(vnode, props) {\n  return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);\n}\n\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\nvar items = [];\n\nfunction enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component) == 1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\nfunction rerender() {\n\tvar p,\n\t    list = items;\n\titems = [];\n\twhile (p = list.pop()) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n\nfunction isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\t\treturn node.splitText !== undefined;\n\t}\n\tif (typeof vnode.nodeName === 'string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor === vnode.nodeName;\n}\n\nfunction isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();\n}\n\nfunction getNodeProps(vnode) {\n\tvar props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tvar defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps !== undefined) {\n\t\tfor (var i in defaultProps) {\n\t\t\tif (props[i] === undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n\nfunction createNode(nodeName, isSvg) {\n\tvar node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\nfunction removeNode(node) {\n\tvar parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nfunction setAccessor(node, name, old, value, isSvg) {\n\tif (name === 'className') name = 'class';\n\n\tif (name === 'key') {} else if (name === 'ref') {\n\t\tif (old) old(null);\n\t\tif (value) value(node);\n\t} else if (name === 'class' && !isSvg) {\n\t\tnode.className = value || '';\n\t} else if (name === 'style') {\n\t\tif (!value || typeof value === 'string' || typeof old === 'string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value === 'object') {\n\t\t\tif (typeof old !== 'string') {\n\t\t\t\tfor (var i in old) {\n\t\t\t\t\tif (!(i in value)) node.style[i] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i in value) {\n\t\t\t\tnode.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];\n\t\t\t}\n\t\t}\n\t} else if (name === 'dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t} else if (name[0] == 'o' && name[1] == 'n') {\n\t\tvar useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t} else {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t} else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n\t\ttry {\n\t\t\tnode[name] = value == null ? '' : value;\n\t\t} catch (e) {}\n\t\tif ((value == null || value === false) && name != 'spellcheck') node.removeAttribute(name);\n\t} else {\n\t\tvar ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''));\n\n\t\tif (value == null || value === false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);\n\t\t} else if (typeof value !== 'function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n\nvar mounts = [];\n\nvar diffLevel = 0;\n\nvar isSvgMode = false;\n\nvar hydrating = false;\n\nfunction flushMounts() {\n\tvar c;\n\twhile (c = mounts.pop()) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\nfunction diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\tif (!diffLevel++) {\n\t\tisSvgMode = parent != null && parent.ownerSVGElement !== undefined;\n\n\t\thydrating = dom != null && !('__preactattr_' in dom);\n\t}\n\n\tvar ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\tif (parent && ret.parentNode !== parent) parent.appendChild(ret);\n\n\tif (! --diffLevel) {\n\t\thydrating = false;\n\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tvar out = dom,\n\t    prevSvgMode = isSvgMode;\n\n\tif (vnode == null || typeof vnode === 'boolean') vnode = '';\n\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\t\tif (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\tif (dom.nodeValue != vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t} else {\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout['__preactattr_'] = true;\n\n\t\treturn out;\n\t}\n\n\tvar vnodeName = vnode.nodeName;\n\tif (typeof vnodeName === 'function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\tisSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;\n\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\twhile (dom.firstChild) {\n\t\t\t\tout.appendChild(dom.firstChild);\n\t\t\t}\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\tvar fc = out.firstChild,\n\t    props = out['__preactattr_'],\n\t    vchildren = vnode.children;\n\n\tif (props == null) {\n\t\tprops = out['__preactattr_'] = {};\n\t\tfor (var a = out.attributes, i = a.length; i--;) {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t}\n\t}\n\n\tif (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {\n\t\tif (fc.nodeValue != vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t} else if (vchildren && vchildren.length || fc != null) {\n\t\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);\n\t\t}\n\n\tdiffAttributes(out, vnode.attributes, props);\n\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tvar originalChildren = dom.childNodes,\n\t    children = [],\n\t    keyed = {},\n\t    keyedLen = 0,\n\t    min = 0,\n\t    len = originalChildren.length,\n\t    childrenLen = 0,\n\t    vlen = vchildren ? vchildren.length : 0,\n\t    j,\n\t    c,\n\t    f,\n\t    vchild,\n\t    child;\n\n\tif (len !== 0) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar _child = originalChildren[i],\n\t\t\t    props = _child['__preactattr_'],\n\t\t\t    key = vlen && props ? _child._component ? _child._component.__key : props.key : null;\n\t\t\tif (key != null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = _child;\n\t\t\t} else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = _child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen !== 0) {\n\t\tfor (var i = 0; i < vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\tvar key = vchild.key;\n\t\t\tif (key != null) {\n\t\t\t\tif (keyedLen && keyed[key] !== undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t} else if (min < childrenLen) {\n\t\t\t\t\tfor (j = min; j < childrenLen; j++) {\n\t\t\t\t\t\tif (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\t\tif (j === childrenLen - 1) childrenLen--;\n\t\t\t\t\t\t\tif (j === min) min++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child !== dom && child !== f) {\n\t\t\t\tif (f == null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t} else if (child === f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t} else {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (keyedLen) {\n\t\tfor (var i in keyed) {\n\t\t\tif (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);\n\t\t}\n\t}\n\n\twhile (min <= childrenLen) {\n\t\tif ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);\n\t}\n}\n\nfunction recollectNodeTree(node, unmountOnly) {\n\tvar component = node._component;\n\tif (component) {\n\t\tunmountComponent(component);\n\t} else {\n\t\tif (node['__preactattr_'] != null && node['__preactattr_'].ref) node['__preactattr_'].ref(null);\n\n\t\tif (unmountOnly === false || node['__preactattr_'] == null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\nfunction removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tvar next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\nfunction diffAttributes(dom, attrs, old) {\n\tvar name;\n\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name] != null) && old[name] != null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\tfor (name in attrs) {\n\t\tif (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n\nvar recyclerComponents = [];\n\nfunction createComponent(Ctor, props, context) {\n\tvar inst,\n\t    i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t} else {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor === Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\nfunction setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t} else if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context !== component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode !== 0) {\n\t\tif (renderMode === 1 || options.syncComponentUpdates !== false || !component.base) {\n\t\t\trenderComponent(component, 1, mountAll);\n\t\t} else {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\nfunction renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tvar props = component.props,\n\t    state = component.state,\n\t    context = component.context,\n\t    previousProps = component.prevProps || props,\n\t    previousState = component.prevState || state,\n\t    previousContext = component.prevContext || context,\n\t    isUpdate = component.base,\n\t    nextBase = component.nextBase,\n\t    initialBase = isUpdate || nextBase,\n\t    initialChildComponent = component._component,\n\t    skip = false,\n\t    snapshot = previousContext,\n\t    rendered,\n\t    inst,\n\t    cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t} else if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tvar childComponent = rendered && rendered.nodeName,\n\t\t    toUnmount,\n\t\t    base;\n\n\t\tif (typeof childComponent === 'function') {\n\n\t\t\tvar childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor === childComponent && childProps.key == inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, 1, context, false);\n\t\t\t} else {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, 0, context, false);\n\t\t\t\trenderComponent(inst, 1, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t} else {\n\t\t\tcbase = initialBase;\n\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode === 1) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base !== initialBase && inst !== initialChildComponent) {\n\t\t\tvar baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base !== baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tvar componentRef = component,\n\t\t\t    t = component;\n\t\t\twhile (t = t._parentComponent) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t} else if (!skip) {\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) {\n\t\tcomponent._renderCallbacks.pop().call(component);\n\t}if (!diffLevel && !isChild) flushMounts();\n}\n\nfunction buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tvar c = dom && dom._component,\n\t    originalComponent = c,\n\t    oldDom = dom,\n\t    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n\t    isOwner = isDirectOwner,\n\t    props = getNodeProps(vnode);\n\twhile (c && !isOwner && (c = c._parentComponent)) {\n\t\tisOwner = c.constructor === vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, 3, context, mountAll);\n\t\tdom = c.base;\n\t} else {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, 1, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom !== oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\nfunction unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tvar base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\tvar inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t} else if (base) {\n\t\tif (base['__preactattr_'] && base['__preactattr_'].ref) base['__preactattr_'].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n}\n\nfunction Component(props, context) {\n\tthis._dirty = true;\n\n\tthis.context = context;\n\n\tthis.props = props;\n\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\nextend(Component.prototype, {\n\tsetState: function setState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(extend({}, this.state), typeof state === 'function' ? state(this.state, this.props) : state);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\tforceUpdate: function forceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, 2);\n\t},\n\trender: function render() {}\n});\n\nfunction render(vnode, parent, merge) {\n  return diff(merge, vnode, {}, false, parent, false);\n}\n\nvar preact = {\n\th: h,\n\tcreateElement: h,\n\tcloneElement: cloneElement,\n\tComponent: Component,\n\trender: render,\n\trerender: rerender,\n\toptions: options\n};\n\nexport default preact;\nexport { h, h as createElement, cloneElement, Component, render, rerender, options };\n//# sourceMappingURL=preact.mjs.map\n","/**\n * Find an element.\n * \n * @param tagName The name of the element's HTML tag.\n * @param selector The selector for the element, not including its HTML tag.\n * @param parent The parent node to search within.\n */\nexport function getElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  selector: string,\n  parent: ParentNode = document\n): HTMLElementTagNameMap[K] {\n  const finalSelector = `${tagName}${selector}`;\n  const node = parent.querySelector(finalSelector);\n  if (!node) {\n    throw new Error(`Couldn't find any elements matching \"${finalSelector}\"`);\n  }\n  return node as HTMLElementTagNameMap[K];\n}\n","import { GlProgram, setupBuffer } from \"./webgl\";\nimport { Points3D } from \"./points-3d\";\n\nexport interface Points3DRendererProgram extends GlProgram {\n  positionAttributeLocation: number;\n}\n\nexport class Points3DRenderer {\n  buffer: WebGLBuffer;\n\n  constructor(readonly program: Points3DRendererProgram, readonly points: Points3D) {\n    const { gl } = program;\n    this.buffer = setupBuffer(gl, points.toFloat32Array());\n  }\n\n  setupForDrawing() {\n    const { gl, positionAttributeLocation } = this.program;\n\n    gl.enableVertexAttribArray(positionAttributeLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n\n    const vertexSize = 3;\n    const type = gl.FLOAT;\n    const normalize = false;\n    const stride = 0;\n    const offset = 0;\n    gl.vertexAttribPointer(positionAttributeLocation, vertexSize, type, normalize, stride, offset);\n  }\n\n  draw(primitiveType: number = WebGLRenderingContext.TRIANGLES) {\n    const { gl } = this.program;\n    const drawOffset = 0;\n    const count = this.points.length;\n    gl.drawArrays(primitiveType, drawOffset, count);  \n  }\n}\n","import { Vector3D } from \"./vector-3d\";\nimport { Points3D } from \"./points-3d\";\n\ntype Column = 1|2|3|4;\ntype Row = 1|2|3|4;\n\n/**\n * A 4x4 matrix represented as\n * a two-dimensional array in\n * row-major order.\n */\ntype Matrix3DTuple = [\n  [number, number, number, number],\n  [number, number, number, number],\n  [number, number, number, number],\n  [number, number, number, number]\n];\n\nexport type PerspectiveOptions = {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n  near: number;\n  far: number;\n};\n\nconst IDENTITY: Matrix3DTuple = [\n  [1, 0, 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1]\n];\n\n/**\n * A three-dimensional matrix. Note that it ultimately represents a 4x4\n * matrix because we use homogeneous coordinates.\n */\nexport class Matrix3D {\n  constructor(readonly values: Matrix3DTuple = IDENTITY) {\n    this.valueAt = this.valueAt.bind(this);\n  }\n\n  /**\n   * Convert the matrix into a Float32Array in column-major order\n   * (the layout that GLSL expects).\n   */\n  toFloat32Array(): Float32Array {\n    const m = this.valueAt;\n    return new Float32Array([\n      m(1, 1), m(2, 1), m(3, 1), m(4, 1),\n      m(1, 2), m(2, 2), m(3, 2), m(4, 2),\n      m(1, 3), m(2, 3), m(3, 3), m(4, 3),\n      m(1, 4), m(2, 4), m(3, 4), m(4, 4),\n    ]);\n  }\n\n  valueAt(row: Row, column: Column): number {\n    return this.values[row - 1][column - 1];\n  }\n\n  translate(v: Vector3D): Matrix3D;\n  translate(x: number, y: number, z: number): Matrix3D;\n\n  translate(x: Vector3D|number, y?: number, z?: number): Matrix3D {\n    const v = Vector3D.fromVectorOrCoords(x, y, z);\n\n    return this.multiply(new Matrix3D([\n      [1, 0, 0, v.x],\n      [0, 1, 0, v.y],\n      [0, 0, 1, v.z],\n      [0, 0, 0,   1]\n    ]));\n  }\n\n  scale(x: number, y?: number, z?: number): Matrix3D {\n    if (y === undefined) {\n      y = x;\n    }\n    if (z === undefined) {\n      z = y;\n    }\n    return this.multiply(new Matrix3D([\n      [x, 0, 0, 0],\n      [0, y, 0, 0],\n      [0, 0, z, 0],\n      [0, 0, 0, 1]\n    ]));\n  }\n\n  /** Rotate counter-clockwise around the X axis. */\n  rotateX(radians: number) {\n    // Deriving this requires the trigonometric identities for angle sums:\n    //\n    //   https://en.wikipedia.org/wiki/List_of_trigonometric_identities\n    //\n    // That said, I think an alternative approach is to think of rotation\n    // as transformation of basis vectors via matrix multiplication,\n    // which simplifies things conceptually.\n    const c = Math.cos(radians);\n    const s = Math.sin(radians);\n    return this.multiply(new Matrix3D([\n      [1,  0, 0, 0],\n      [0,  c, s, 0],\n      [0, -s, c, 0],\n      [0,  0, 0, 1]\n    ]));\n  }\n\n  /** Rotate counter-clockwise around the Y axis. */\n  rotateY(radians: number) {\n    const c = Math.cos(radians);\n    const s = Math.sin(radians);\n    return this.multiply(new Matrix3D([\n      [c, 0, -s, 0],\n      [0, 1,  0, 0],\n      [s, 0,  c, 0],\n      [0, 0,  0, 1]\n    ]));\n  }\n\n  /** Rotate counter-clockwise around the Z axis. */\n  rotateZ(radians: number) {\n    const c = Math.cos(radians);\n    const s = Math.sin(radians);\n    return this.multiply(new Matrix3D([\n      [c, -s, 0, 0],\n      [s,  c, 0, 0],\n      [0,  0, 1, 0],\n      [0,  0, 0, 1]\n    ]));\n  }\n\n  multiply(m2: Matrix3D): Matrix3D {\n    // Conceptualy, it's easiest to think of matrix multiplication\n    // as a transformation of a coordinate system's basis\n    // vectors:\n    //\n    //   http://www.3blue1brown.com/essence-of-linear-algebra-page/\n    //\n    // This isn't particularly efficient code, but hopefully\n    // it is readable.\n    const col1 = this.transformVector(m2.column(1));\n    const col2 = this.transformVector(m2.column(2));\n    const col3 = this.transformVector(m2.column(3));\n    const col4 = this.transformVector(m2.column(4));\n    return new Matrix3D([\n      [col1.x, col2.x, col3.x, col4.x],\n      [col1.y, col2.y, col3.y, col4.y],\n      [col1.z, col2.z, col3.z, col4.z],\n      [col1.w, col2.w, col3.w, col4.w],\n    ]);\n  }\n\n  /**\n   * Apply the given function to every element of the matrix, returning\n   * a new one.\n   */\n  map(f: (value: number) => number): Matrix3D {\n    return new Matrix3D(this.values.map(row => row.map(f)) as Matrix3DTuple);\n  }\n\n  /**\n   * Multiply all elements of the matrix by the given constant,\n   * returning a new matrix.\n   */\n  multiplyByConstant(n: number): Matrix3D {\n    return this.map(value => value * n);\n  }\n\n  /**\n   * Create a matrix that transforms eye coordinates into clip\n   * coordinates.\n   * \n   * Note that clip coordinates will likely have a w-component\n   * that is not 1; the GPU will perform a perspective divide\n   * after the vertex shader to convert the clip coordinates\n   * into normalized device coordinates (NDC).\n   * \n   * Note also that the near and far parameters must be\n   * specified as positive numbers, as the clip coordinates\n   * use a left-handed coordinate system, while the\n   * eye coordinates use a right-handed coordinate system,\n   * and the projection matrix will convert between the\n   * two.\n   * \n   * For more details, as well as an excellent derivation\n   * of all the math behind all this, see:\n   * \n   *   http://www.songho.ca/opengl/gl_projectionmatrix.html#perspective\n   */\n  static perspectiveProjection(options: PerspectiveOptions): Matrix3D {\n    const { near, far, left, right, top, bottom } = options;\n    const width = right - left;\n    const height = top - bottom;\n    const depth = far - near;\n    const doubleNear = 2 * near;\n    return new Matrix3D([\n      [doubleNear / width, 0, (right + left) / width, 0],\n      [0, doubleNear / height, (top + bottom) / height, 0],\n      [0, 0, -(far + near) / depth, -2 * far * near / depth],\n      [0, 0, -1, 0]\n    ]);\n  }\n\n  transformPoints(points: Points3D): Points3D {\n    return points.map(v => this.transformVector(v));\n  }\n\n  transformVector(v: Vector3D): Vector3D {\n    const m = this.valueAt;\n    return new Vector3D(\n      m(1, 1) * v.x + m(1, 2) * v.y + m(1, 3) * v.z + m(1, 4) * v.w,\n      m(2, 1) * v.x + m(2, 2) * v.y + m(2, 3) * v.z + m(2, 4) * v.w,\n      m(3, 1) * v.x + m(3, 2) * v.y + m(3, 3) * v.z + m(3, 4) * v.w,\n      m(4, 1) * v.x + m(4, 2) * v.y + m(4, 3) * v.z + m(4, 4) * v.w,\n    );\n  }\n\n  column(col: Column): Vector3D {\n    const m = this.valueAt;\n    return new Vector3D(\n      m(1, col),\n      m(2, col),\n      m(3, col),\n      m(4, col)\n    );\n  }\n}\n","import { Vector3D } from \"./vector-3d\";\n\nexport class Points3D {\n  constructor(private readonly array: Vector3D[]) {\n  }\n\n  toFloat32Array(): Float32Array {\n    const { array } = this;\n    const result = new Float32Array(array.length * 3);\n    let arrIndex = 0;\n\n    for (let i = 0; i < result.length; i += 3) {\n      result[i] = array[arrIndex].x;\n      result[i + 1] = array[arrIndex].y;\n      result[i + 2] = array[arrIndex].z;\n      arrIndex += 1;\n    }\n\n    return result;\n  }\n\n  concat(points: Points3D): Points3D {\n    const combined = this.array.concat(points.array);\n    return new Points3D(combined);\n  }\n\n  map(fn: (v: Vector3D) => Vector3D) {\n    return new Points3D(this.array.map(fn));\n  }\n\n  get length(): number {\n    return this.array.length;\n  }\n\n  static fromArray(array: number[]|Float32Array) {\n    const numPoints = array.length / 3;\n    const pointArray = new Array<Vector3D>(numPoints);\n    let arrIndex = 0;\n    for (let i = 0; i < numPoints; i++) {\n      const x = array[arrIndex];\n      const y = array[arrIndex + 1];\n      const z = array[arrIndex + 2];\n      pointArray[i] = new Vector3D(x, y, z);\n      arrIndex += 3;\n    }\n    return new Points3D(pointArray);\n  }\n}\n","import { h, render } from \"preact\";\nimport { AppUi } from \"./app-ui\";\nimport { getElement } from \"../get-element\";\nimport { App } from \"./app\";\n\n// https://css-tricks.com/snippets/css/remove-gray-highlight-when-tapping-links-in-mobile-safari/\ndocument.addEventListener(\"touchstart\", () => {}, true);\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  const app = new App(getElement('canvas', '#canvas'));\n\n  app.run();\n\n  render(<AppUi app={app} />, getElement('div', '#app-ui'));\n});\n","import { h, Component } from 'preact';\nimport { App } from './app';\nimport { Hotkey } from '../keyboard';\n\ninterface CheckboxProps {\n  label: string;\n  checked: boolean;\n  onToggle: (newValue: boolean) => void;\n  hotkey?: string;\n}\n\nfunction Checkbox(props: CheckboxProps): JSX.Element {\n  const handleToggle = () => props.onToggle(!props.checked);\n\n  return (\n    <label>\n      <input type=\"checkbox\"\n            checked={props.checked}\n            onClick={handleToggle} /> {props.label}{' '}\n      {props.hotkey && <Hotkey onPressed={handleToggle} hotkey={props.hotkey} />}\n    </label>\n  );\n}\n\ninterface AppUiProps {\n  app: App\n}\n\nexport type AppUiState = {\n  showColliders: boolean;\n  isPaused: boolean;\n  showZBuffer: boolean;\n  enableLighting: boolean;\n};\n\nexport class AppUi extends Component<AppUiProps, AppUiState> {\n  constructor(props: AppUiProps) {\n    super(props);\n    this.state = props.app.getUi();\n  }\n\n  componentDidUpdate() {\n    this.props.app.dispatchAction({ type: 'uiupdate', ui: this.state });\n  }\n\n  render(props: AppUiProps, state: AppUiState): JSX.Element {\n    return (\n      <div className=\"ui-wrapper\">\n        <div className=\"ui\">\n          <Checkbox checked={state.showColliders}\n                    label=\"Show colliders\"\n                    hotkey=\"c\"\n                    onToggle={showColliders => this.setState({ showColliders })} />\n          <Checkbox checked={state.isPaused}\n                    label=\"Pause\"\n                    hotkey=\"p\"\n                    onToggle={isPaused => this.setState({ isPaused })} />\n          <Checkbox checked={state.showZBuffer}\n                    label=\"Show z-buffer\"\n                    hotkey=\"z\"\n                    onToggle={showZBuffer => this.setState({ showZBuffer })} />\n          {!state.showZBuffer &&\n            <Checkbox checked={state.enableLighting}\n                      label=\"Enable lighting\"\n                      hotkey=\"l\"\n                      onToggle={enableLighting => this.setState({ enableLighting })} />}\n        </div>\n      </div>\n    );\n  }\n}\n","import { h, Component } from \"preact\";\n\ntype KeyboardMapHandler = () => void;\n\nexport class KeyboardMap {\n  mapping: Map<string, KeyboardMapHandler> = new Map();\n\n  constructor() {\n    document.body.addEventListener('keypress', e => this.handleEvent(e));\n  }\n\n  private handleEvent(e: KeyboardEvent) {\n    const handler = this.mapping.get(e.key.toLowerCase());\n    if (handler) {\n      handler();\n    }\n  }\n\n  set(key: string, handler: KeyboardMapHandler) {\n    this.mapping.set(key, handler);\n  }\n\n  unset(key: string) {\n    this.mapping.delete(key);\n  }\n}\n\nconst globalKeyboardMapping = new KeyboardMap();\n\ninterface HotkeyProps {\n  hotkey: string;\n  onPressed: KeyboardMapHandler;\n}\n\nexport class Hotkey extends Component<HotkeyProps> {\n  handlePress() {\n    this.props.onPressed();\n  }\n\n  componentDidMount() {\n    globalKeyboardMapping.set(this.props.hotkey, this.handlePress.bind(this));\n  }\n\n  componentWillUnmount() {\n    globalKeyboardMapping.unset(this.props.hotkey);\n  }\n\n  render(props: HotkeyProps) {\n    return <kbd>{props.hotkey.toUpperCase()}</kbd>;\n  }\n}\n","import { GlProgram, getAttribLocation, GlUniformMatrix3D, GlUniformBoolean, GlUniformVector3D } from \"../webgl\";\nimport { Points3DRenderer } from \"../points-3d-renderer\";\nimport { Matrix3D, PerspectiveOptions } from \"../matrix-3d\";\nimport { Vector3D } from \"../vector-3d\";\nimport { InvertibleTransforms3D } from \"../invertible-transforms-3d\";\nimport { makeSpaceship, makeGround, makeCircle } from \"./shapes\";\nimport { Point2D, screenCoordsToWorld, Dimensions2D } from \"../screen-space\";\nimport { Ray3D } from \"../ray-3d\";\nimport { getRaySphereIntersection } from \"../intersections\";\nimport { BLACK, Color } from \"../color\";\nimport { AppUiState } from \"./app-ui\";\n\nconst simpleVertexShaderSrc = require(\"./simple-vertex-shader.glsl\") as string;\nconst zBufferFragmentShaderSrc = require(\"./simple-fragment-shader.glsl\") as string;\n\nconst PURPLE = Color.fromHex('#ed225d');\nconst BLUE = Color.fromHex('#2d7bb6');\n\nclass SimpleGlProgram extends GlProgram {\n  readonly projectionTransform: GlUniformMatrix3D;\n  readonly viewTransform: GlUniformMatrix3D;\n  readonly modelTransform: GlUniformMatrix3D;\n  readonly showZBuffer: GlUniformBoolean;\n  readonly color: GlUniformVector3D;\n  readonly light: GlUniformVector3D;\n  readonly normal: GlUniformVector3D;\n  readonly shade: GlUniformBoolean;\n  readonly positionAttributeLocation: number;\n\n  constructor(gl: WebGLRenderingContext) {\n    super(gl, simpleVertexShaderSrc, zBufferFragmentShaderSrc);\n    this.projectionTransform = new GlUniformMatrix3D(this, 'u_projection_transform');\n    this.viewTransform = new GlUniformMatrix3D(this, 'u_view_transform');\n    this.modelTransform = new GlUniformMatrix3D(this, 'u_model_transform');\n    this.color = new GlUniformVector3D(this, 'u_color');\n    this.light = new GlUniformVector3D(this, 'u_light');\n    this.normal = new GlUniformVector3D(this, 'u_normal');\n    this.shade = new GlUniformBoolean(this, 'u_shade');\n    this.positionAttributeLocation = getAttribLocation(gl, this.program, 'a_position');\n    this.showZBuffer = new GlUniformBoolean(this, 'u_show_z_buffer');\n  }\n}\n\ntype SpaceshipState = {\n  orbitTheta: number;\n  orbitThetaVelocity: number;\n  distanceFromCenter: number;\n  scale: number;\n  shipTheta: number;\n  shipThetaVelocity: number;\n  z: number;\n  color: Color;\n};\n\nclass Spaceship {\n  readonly state: Readonly<SpaceshipState>;\n\n  /** Model matrix to convert from object space to world space. */\n  readonly transform: Readonly<Matrix3D>;\n\n  /** The ship's surface normal, in object space. */\n  static readonly normal = new Vector3D(0, 0, 1);\n\n  private readonly colliderScale = 0.5;\n\n  constructor(state: SpaceshipState) {\n    this.state = state;\n\n    const transform = new Matrix3D()\n      .rotateZ(state.orbitTheta)\n      .translate(state.distanceFromCenter, 0, state.z)\n      .scale(state.scale)\n      .rotateY(state.shipTheta);\n\n    this.transform = transform;\n  }\n\n  static createRandom(props: Partial<SpaceshipState>) {\n    return new Spaceship({\n      orbitTheta: Math.random(),\n      orbitThetaVelocity: Math.random() * 0.01,\n      distanceFromCenter: Math.random(),\n      scale: 0.5,\n      shipTheta: Math.random(),\n      shipThetaVelocity: Math.random() * 0.05,\n      z: Math.random(),\n      color: PURPLE,\n      ...props\n    });\n  }\n\n  get colliderRadius(): number {\n    return this.state.scale * this.colliderScale;\n  }\n\n  /** Return a model matrix for the collider. */\n  getColliderTransform(): Matrix3D {\n    return this.transform.scale(this.colliderScale);\n  }\n\n  center(): Vector3D {\n    return this.transform.transformVector(new Vector3D());\n  }\n\n  doesRayIntersect(ray: Ray3D): boolean {\n    return getRaySphereIntersection(ray, this.center(), this.colliderRadius) !== null;\n  }\n\n  withColor(color: Color): Spaceship {\n    return new Spaceship({...this.state, color});\n  }\n\n  update(): Spaceship {\n    const { state } = this;\n    return new Spaceship({\n      ...state,\n      orbitTheta: state.orbitTheta + state.orbitThetaVelocity,\n      shipTheta: state.shipTheta + state.shipThetaVelocity,\n    });\n  }\n};\n\nfunction drawCollider(baseModelTransform: Matrix3D,\n                      modelTransformUniform: GlUniformMatrix3D,\n                      renderer: Points3DRenderer) {\n  const modelTransforms = [\n    baseModelTransform,\n    baseModelTransform.rotateX(Math.PI / 2),\n    baseModelTransform.rotateY(Math.PI / 2)\n  ];\n\n  modelTransforms.forEach(transform => {\n    modelTransformUniform.set(transform);\n    renderer.draw(WebGLRenderingContext.LINE_LOOP);\n  });\n}\n\nclass CameraRay {\n  readonly ray: Ray3D;\n\n  constructor(options: {\n    cameraTransform: InvertibleTransforms3D,\n    canvas: Dimensions2D,\n    coords: Point2D,\n    perspective: PerspectiveOptions,\n  }) {\n    const cameraPosition = options.cameraTransform.matrix.transformVector(new Vector3D());\n    const screenPointInWorld = screenCoordsToWorld(\n      options.canvas,\n      options.coords,\n      options.perspective,\n      options.cameraTransform.matrix\n    );\n    this.ray = Ray3D.fromTo(cameraPosition, screenPointInWorld);\n  }\n}\n\ntype SceneState = {\n  perspective: PerspectiveOptions;\n  spaceships: Spaceship[];\n  cameraRotation: number;\n};\n\nclass Scene {\n  /** Matrix to convert from eye space to clip coordinates. */\n  readonly projectionTransform: Matrix3D;\n\n  /** Matrix to move the camera from the origin to its position in world space. */\n  readonly cameraTransform: InvertibleTransforms3D;\n\n  /** Matrix to convert from world space to eye space. */\n  readonly viewTransform: Matrix3D;\n\n  constructor(readonly state: Readonly<SceneState>) {\n    this.projectionTransform = Matrix3D.perspectiveProjection(state.perspective);\n    this.cameraTransform = new InvertibleTransforms3D()\n      .rotateY(state.cameraRotation)\n      .translate(0, 0, 2.25);\n    this.viewTransform = this.cameraTransform.inverse();\n  }\n\n  update(): Scene {\n    const { state } = this;\n    return new Scene({\n      ...state,\n      cameraRotation: state.cameraRotation + 0.001,\n      spaceships: state.spaceships.map(ship => ship.update())\n    });\n  }\n\n  shootRay(ray: CameraRay): Scene {\n    const { state } = this;\n    return new Scene({\n      ...state,\n      spaceships: state.spaceships.map(\n        s => s.withColor(s.doesRayIntersect(ray.ray) ? BLUE : PURPLE)\n      )\n    });\n  }\n};\n\nfunction createRandomSpaceships(amount = 30) {\n  const spaceships: Spaceship[] = [];\n\n  for (let i = 0; i < amount; i++) {\n    spaceships.push(Spaceship.createRandom({\n      z: -1 + ((i / amount) * 2)\n    }));\n  }\n\n  return spaceships;\n}\n\ntype ClickAction = {\n  type: 'click';\n  point: Point2D;\n};\n\ntype TickAction = {\n  type: 'tick'\n};\n\ntype UiUpdateAction = {\n  type: 'uiupdate',\n  ui: AppUiState\n};\n\ntype AppAction = ClickAction|TickAction|UiUpdateAction;\n\ntype AppState = {\n  scene: Scene;\n  ui: AppUiState;\n}\n\nexport class App {\n  readonly gl: WebGLRenderingContext;\n  readonly program: SimpleGlProgram;\n  readonly spaceshipRenderer: Points3DRenderer;\n  readonly groundRenderer: Points3DRenderer;\n  readonly circleRenderer: Points3DRenderer;\n  private queuedActions: AppAction[] = [];\n  private ui: AppUiState = {\n    showColliders: false,\n    isPaused: false,\n    showZBuffer: false,\n    enableLighting: true\n  };\n\n  constructor(readonly canvas: HTMLCanvasElement) {\n    const gl = canvas.getContext('webgl');\n\n    if (!gl) throw new Error(\"webgl is not supported on this browser!\");\n\n    this.gl = gl;\n\n    const program = new SimpleGlProgram(gl);\n    this.program = program;\n    this.spaceshipRenderer = new Points3DRenderer(program, makeSpaceship());\n    this.groundRenderer = new Points3DRenderer(program, makeGround());\n    this.circleRenderer = new Points3DRenderer(program, makeCircle());\n\n    canvas.addEventListener('click', (e) => {\n      if (this.ui.isPaused) return;\n      const { height, width } = canvas.getBoundingClientRect();\n      const x = Math.floor(e.offsetX / width * canvas.width);\n      const y = Math.floor(e.offsetY / height * canvas.height);\n      this.queuedActions.push({\n        type: 'click',\n        point: {x, y}\n      });\n    });\n  }\n\n  dispatchAction(action: AppAction) {\n    this.queuedActions.push(action);\n  }\n\n  getUi() {\n    return this.ui;\n  }\n\n  render({ scene, ui }: AppState) {\n    const { gl, program } = this;\n\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.enable(gl.DEPTH_TEST);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    program.activate();\n    program.showZBuffer.set(ui.showZBuffer);\n    program.color.set(BLACK);\n    // Have the light be where the camera is.\n    program.light.set(scene.cameraTransform.matrix.transformVector(new Vector3D()));\n    program.projectionTransform.set(scene.projectionTransform);\n    program.viewTransform.set(scene.viewTransform);\n    program.shade.set(false);\n\n    this.groundRenderer.setupForDrawing();\n    // The ground is already in world coordinates.\n    program.modelTransform.set(new Matrix3D());\n    this.groundRenderer.draw(gl.LINES);\n\n    this.spaceshipRenderer.setupForDrawing();\n    program.shade.set(ui.enableLighting);\n    program.normal.set(Spaceship.normal);\n    scene.state.spaceships.forEach(spaceship => {\n      program.color.set(spaceship.state.color);\n      program.modelTransform.set(spaceship.transform);\n      this.spaceshipRenderer.draw();\n    });\n    program.shade.set(false);\n\n    if (ui.showColliders) {\n      this.circleRenderer.setupForDrawing();\n      scene.state.spaceships.forEach(spaceship => {\n        const transform = spaceship.getColliderTransform();\n        program.color.set(spaceship.state.color);\n        drawCollider(transform, program.modelTransform, this.circleRenderer);\n      });\n    }\n  }\n\n  processAction({ scene, ui }: AppState, action: AppAction): AppState {\n    switch (action.type) {\n      case 'click':\n      return { scene: scene.shootRay(new CameraRay({\n        coords: action.point,\n        canvas: this.canvas,\n        cameraTransform: scene.cameraTransform,\n        perspective: scene.state.perspective\n      })), ui };\n\n      case 'tick':\n      return { scene: scene.update(), ui };\n\n      case 'uiupdate':\n      return { scene, ui: action.ui };\n    }\n  }\n\n  createInitialScene(): Scene {\n    return new Scene({\n      perspective: {\n        top: 1,\n        bottom: -1,\n        right: 1,\n        left: -1,\n        near: 1,\n        far: 4\n      },\n      spaceships: createRandomSpaceships(),\n      cameraRotation: 0\n    });\n  }\n\n  run() {\n    let state: AppState = {\n      scene: this.createInitialScene(),\n      ui: this.ui\n    };\n\n    const updateFrame = () => {\n      this.render(state);\n\n      const actions: AppAction[] = [...this.queuedActions];\n      this.queuedActions = [];\n\n      if (!state.ui.isPaused) {\n        actions.push({ type: 'tick' });\n      }\n\n      for (let action of actions) {\n        state = this.processAction(state, action);\n      }\n\n      window.requestAnimationFrame(updateFrame);\n    }\n\n    updateFrame();\n  }\n}\n","import { Matrix3D } from \"./matrix-3d\";\nimport { Vector3D } from \"./vector-3d\";\n\ntype InvertOp = (m: Matrix3D) => Matrix3D;\n\n/**\n * A class that keeps track of simple 3D transformations made to it, so\n * its inverse can be easily computed.\n * \n * I originally thought this idea was too silly to use in practice, but\n * it's actually documented in Real-Time Rendering, 4th edition,\n * section 4.1.8 (page 69) as a perfectly valid way to invert many\n * kinds of matrices we're interested in.\n */\nexport class InvertibleTransforms3D {\n  constructor(readonly matrix: Matrix3D = new Matrix3D(), private ops: InvertOp[] = []) {\n  }\n\n  private addOp(matrix: Matrix3D, op: InvertOp): InvertibleTransforms3D {\n    return new InvertibleTransforms3D(matrix, [op, ...this.ops]);\n  }\n\n  translate(v: Vector3D): InvertibleTransforms3D;\n  translate(x: number, y: number, z: number): InvertibleTransforms3D;\n\n  translate(x: Vector3D|number, y?: number, z?: number): InvertibleTransforms3D {\n    const vector = Vector3D.fromVectorOrCoords(x, y, z);\n\n    return this.addOp(\n      this.matrix.translate(vector),\n      m => m.translate(vector.times(-1))\n    );\n  }\n\n  /** Rotate counter-clockwise around the X axis. */\n  rotateX(radians: number) {\n    return this.addOp(\n      this.matrix.rotateX(radians),\n      m => m.rotateX(-radians)\n    );\n  }\n\n  /** Rotate counter-clockwise around the Y axis. */\n  rotateY(radians: number) {\n    return this.addOp(\n      this.matrix.rotateY(radians),\n      m => m.rotateY(-radians)\n    );\n  }\n\n  /** Rotate counter-clockwise around the Z axis. */\n  rotateZ(radians: number) {\n    return this.addOp(\n      this.matrix.rotateZ(radians),\n      m => m.rotateZ(-radians)\n    );\n  }\n\n  /** Return the inverse of the matrix. */\n  inverse(): Matrix3D {\n    let matrix = new Matrix3D();\n\n    for (let inverseOp of this.ops) {\n      matrix = inverseOp(matrix);\n    }\n\n    return matrix;\n  }\n}\n","import { Points3D } from \"../points-3d\";\nimport { Vector3D } from \"../vector-3d\";\nimport { Matrix3D } from \"../matrix-3d\";\n\nexport function makeSpaceship(): Points3D {\n  const translate = new Matrix3D().translate(0, -0.25, 0);\n  const mirror = new Matrix3D().scale(-1, 1, 1);\n  const leftHalf = translate.transformPoints(Points3D.fromArray([\n    -0.5, 0, 0,\n    0, 0.75, 0,\n    0, 0.15, 0\n  ]));\n\n  return leftHalf.concat(mirror.transformPoints(leftHalf));\n}\n\nexport function makeGround(y = -1, xzStart = -1, size = 2, pointsPerAxis = 20): Points3D {\n  const points: number[] = [];\n  let xPart = xzStart;\n  let zPart = xzStart;\n  let partInc = 1 / pointsPerAxis;\n\n  for (let i = 0; i <= pointsPerAxis; i++) {\n    points.push(xPart, y, zPart);\n    points.push(xPart, y, zPart + size);\n    xPart += size * partInc;\n  }\n\n  xPart = xzStart;\n  for (let i = 0; i <= pointsPerAxis; i++) {\n    points.push(xPart, y, zPart);\n    points.push(xPart + size, y, zPart);\n    zPart += size * partInc;\n  }\n\n  return Points3D.fromArray(points);\n}\n\nexport function makeCircle(segments = 20): Points3D {\n  const points: number[] = [];\n  const start = new Vector3D(1, 0, 0);\n\n  for (let i = 0; i < segments; i++) {\n    const rotation = new Matrix3D().rotateZ(2 * Math.PI * (i / segments));\n    const p = rotation.transformVector(start);\n    points.push(p.x, p.y, p.z);\n  }\n\n  return Points3D.fromArray(points);\n}\n","import { PerspectiveOptions, Matrix3D } from \"./matrix-3d\";\nimport { Vector3D } from \"./vector-3d\";\n\nexport type Point2D = {\n  x: number,\n  y: number\n};\n\nexport type Dimensions2D = {\n  width: number,\n  height: number\n};\n\n/**\n * Convert the given screen coordinates, in pixels, to\n * eye coordinates (from the perspective of the camera).\n */\nfunction screenCoordsToEye(canvas: Dimensions2D, point: Point2D, perspective: PerspectiveOptions): Vector3D {\n  const width = perspective.right - perspective.left;\n  const height = perspective.top - perspective.bottom;\n  const xPct = (point.x / canvas.width);\n  // Note that we need to flip the y-axis.\n  const yPct = ((canvas.height - point.y) / canvas.height);\n\n  const x = perspective.left + xPct * width;\n  const y = perspective.bottom + yPct * height;\n\n  // We need to flip the near value because it's specified in\n  // clip coordinates.\n  const z = -perspective.near;\n\n  return new Vector3D(x, y, z);\n}\n\n/**\n * Convert the given pixel coordinates on the given canvas to\n * points in the world.\n */\nexport function screenCoordsToWorld(\n  canvas: Dimensions2D,\n  point: Point2D,\n  perspective: PerspectiveOptions,\n  cameraTransform: Matrix3D\n): Vector3D {\n  const pointRelativeToCamera = screenCoordsToEye(canvas, point, perspective);\n  return cameraTransform.transformVector(pointRelativeToCamera);\n}\n","import { Vector3D } from \"./vector-3d\";\n\n/**\n * An abstraction for a normalized ray that emanates\n * from an origin in a direction.\n */\nexport class Ray3D {\n  readonly direction: Vector3D;\n\n  constructor(readonly origin: Vector3D, direction: Vector3D) {\n    this.direction = direction.normalize();\n  }\n\n  pointAlong(t: number): Vector3D {\n    return this.origin.plus(this.direction.times(t));\n  }\n\n  static fromTo(from: Vector3D, to: Vector3D): Ray3D {\n    const direction = to.minus(from);\n    return new Ray3D(from, direction);\n  }\n}\n","import { Vector3D } from \"./vector-3d\";\nimport { Ray3D } from \"./ray-3d\";\n\n/**\n * Tests for ray/sphere intersection, returning null if the\n * ray never intersects with the sphere, or the vector\n * representing the closest point of intersection.\n * \n * Derivation for this can be found in Real-Time Rendering,\n * 4th edition, 22.6.1 (page 956).\n */\nexport function getRaySphereIntersection(ray: Ray3D, center: Vector3D, radius: number): null | Vector3D {\n  const originMinusCenter = ray.origin.minus(center);\n  const b = ray.direction.dot(originMinusCenter);\n  const c = originMinusCenter.dot(originMinusCenter) - radius * radius;\n  const bSquaredMinusC = b * b - c;\n\n  if (bSquaredMinusC < 0) {\n    return null;\n  }\n\n  const sqrt = Math.sqrt(bSquaredMinusC);\n  const t = [-b + sqrt, -b - sqrt].filter(value => value >= 0);\n  if (t.length === 0) {\n    return null;\n  }\n\n  const closestT = t.sort((a, b) => a - b)[0];\n  return ray.pointAlong(closestT);\n}\n","import { Vector3D } from \"./vector-3d\";\n\nexport class Color extends Vector3D {\n  constructor(\n    red: number,\n    green: number,\n    blue: number,\n    alpha: number = 1.0  \n  ) {\n    super(red, green, blue, alpha);\n  }\n\n  static fromHex(hex: string): Color {\n    hex = hex.toLowerCase();\n\n    if (hex[0] == '#') {\n      hex = hex.slice(1);\n    }\n\n    const toFloat = (hex: string) => parseInt(hex, 16) / 255;\n\n    const red = toFloat(hex.substr(0, 2));\n    const green = toFloat(hex.substr(2, 2));\n    const blue = toFloat(hex.substr(4, 2));\n\n    return new Color(red, green, blue);\n  }\n}\n\nexport const BLACK = new Color(0, 0, 0);\n","module.exports = \"precision mediump float;\\n\\n/**\\n * Attributes\\n *\\n * These are passed into us and generally change\\n * from one execution of our shader program to the next\\n * during a render call.\\n */\\n\\n/** The position of the vertex, in object space. */\\nattribute vec4 a_position;\\n\\n/**\\n * Uniforms\\n *\\n * These are passed into us and do not change from\\n * one execution of our shader program to the next\\n * during a render call.\\n */\\n\\n/** The color of the vertex. */\\nuniform vec4 u_color;\\n\\n/** The vertex's normal in object space. */\\nuniform vec4 u_normal;\\n\\n/** The position of the light in world coordinates. */\\nuniform vec4 u_light;\\n\\n/**\\n * Whether or not to actually shade the vertex based on\\n * the current lighting.\\n */\\nuniform bool u_shade;\\n\\n/** Matrix to convert from eye space to clip coordinates. */\\nuniform mat4 u_projection_transform;\\n\\n/** Matrix to convert from world space to eye space. */\\nuniform mat4 u_view_transform;\\n\\n/** Matrix to convert from object space to world space. */\\nuniform mat4 u_model_transform;\\n\\n/**\\n * Varyings\\n *\\n * These are passed from us to the fragment shader.\\n */\\n\\n/** The color of the vertex. */\\nvarying vec4 v_color;\\n\\nvoid main() {\\n  gl_Position = u_projection_transform * u_view_transform * u_model_transform * a_position;\\n\\n  float light_amount = 1.0;\\n\\n  if (u_shade) {\\n    float ambient_light_amount = 0.25;\\n    float max_illumination = 1.0 - ambient_light_amount;\\n\\n    // The surface normal, in world space.\\n    vec4 world_normal = normalize(\\n      u_model_transform * u_normal -\\n      u_model_transform * vec4(0, 0, 0, 1)\\n    );\\n\\n    // The direction from the origin to the light source, in world space.\\n    vec4 world_light = normalize(u_light);\\n\\n    // Based on the angle between the surface normal and the\\n    // light, shade the vertex accordingly.\\n    //\\n    // Note that we're taking the absolute value of the dot\\n    // product because we're assuming that the shape we're\\n    // drawing is two-sided, and that the side of the shape\\n    // visible to the user is also the side that faces the\\n    // light.\\n    float illumination = abs(dot(world_normal, world_light));\\n\\n    light_amount = ambient_light_amount + illumination * max_illumination;\\n  }\\n\\n  v_color = vec4(light_amount * vec3(u_color), 1.0);\\n}\\n\";","module.exports = \"precision mediump float;\\n\\n/**\\n * Uniforms\\n *\\n * These are passed into us and do not change from\\n * one execution of our shader program to the next\\n * during a render call.\\n */\\n\\n/** Whether to color the fragment based on its z-buffer location. */\\nuniform bool u_show_z_buffer;\\n\\n/**\\n * Varyings\\n *\\n * These are passed into us from the vertex shader.\\n */\\n\\n/** The color of the fragment. */\\nvarying vec4 v_color;\\n\\nvoid main() {\\n  if (u_show_z_buffer) {\\n    // This essentially visualizes the z-buffer. Taken from:\\n    //\\n    //   https://learnopengl.com/Advanced-OpenGL/Depth-testing\\n    gl_FragColor = vec4(vec3(gl_FragCoord.z), 1.0);\\n  } else {\\n    gl_FragColor = v_color;\\n  }\\n}\\n\";"],"sourceRoot":""}