{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vector-3d.ts","webpack:///./src/webgl.ts","webpack:///./src/get-element.ts","webpack:///./src/points-3d-renderer.ts","webpack:///./src/points-3d.ts","webpack:///./src/texture-fun/texture-fun.ts","webpack:///./src/texture-fun/texture-fun-vertex-shader.glsl","webpack:///./src/texture-fun/texture-fun-fragment-shader.glsl"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vector3D","[object Object]","x","y","z","w","this","v","len","Math","sqrt","createShader","gl","type","source","shader","Error","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","msg","getShaderInfoLog","deleteShader","getAttribLocation","program","loc","GlProgram","vertexShaderSrc","fragmentShaderSrc","vertexShader","WebGLRenderingContext","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","useProgram","GlUniformBase","location","getUniformLocation","GlUniformVector3D","uniform4fv","GlUniformFloat","uniform1f","GlUniformMatrix3D","uniformMatrix4fv","toFloat32Array","GlUniformBoolean","isPowerOfTwo","log2","floor","GlUniformInteger","uniform1i","setupBuffer","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","setupTexture","pixels","width","height","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","generateMipmap","texParameteri","TEXTURE_MAG_FILTER","NEAREST","getElement","tagName","selector","parent","document","finalSelector","node","querySelector","webgl_1","Points3DRenderer","points","positionAttributeLocation","enableVertexAttribArray","FLOAT","vertexAttribPointer","primitiveType","TRIANGLES","count","length","drawArrays","vector_3d_1","Points3D","array","result","Float32Array","arrIndex","combined","concat","fn","map","numPoints","pointArray","Array","get_element_1","points_3d_1","points_3d_renderer_1","window","onload","canvas","getContext","super","sampler","size","phase","unit","activeTexture","TEXTURE0","set","square","fromArray","renderer","Uint8Array","yGrad","red","green","blue","alpha","makeTexture","render","viewport","clear","COLOR_BUFFER_BIT","activate","setupForDrawing","setupTextureForDrawing","draw","requestAnimationFrame"],"mappings":"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","file":"texture-fun.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","/**\n * A three-dimensional vector. Note that it actually has\n * four elements because we use a homogeneous coordinate\n * system.\n */\nexport class Vector3D {\n  constructor(\n    readonly x: number = 0,\n    readonly y: number = 0,\n    readonly z: number = 0,\n    readonly w: number = 1.0\n  ) {}\n\n  perspectiveDivide(): Vector3D {\n    const { x, y, z, w } = this;\n    return new Vector3D(x / w, y / w, z / w);\n  }\n\n  minus(v: Vector3D): Vector3D {\n    const { x, y, z, w } = this;\n    return new Vector3D(x - v.x, y - v.y, z - v.z, w);\n  }\n\n  plus(v: Vector3D): Vector3D {\n    const { x, y, z, w } = this;\n    return new Vector3D(x + v.x, y + v.y, z + v.z, w);\n  }\n\n  times(n: number): Vector3D {\n    const { x, y, z, w } = this;\n    return new Vector3D(x * n, y * n, z * n, w);\n  }\n\n  dot(v: Vector3D): number {\n    const { x, y, z, w } = this;\n\n    return x * v.x + y * v.y + z * v.z;\n  }\n\n  normalize(): Vector3D {\n    const { x, y, z, w } = this;\n    const len = Math.sqrt(x * x + y * y + z * z);\n    return new Vector3D(x / len, y / len, z / len, w);\n  }\n\n  /**\n   * A helper to convert either a vector or a sequence of coordinates\n   * into a vector.\n   */\n  static fromVectorOrCoords(x: Vector3D | number, y?: number, z?: number): Vector3D {\n    z = x instanceof Vector3D ? x.z : z || 0;\n    y = x instanceof Vector3D ? x.y : y || 0;\n    x = x instanceof Vector3D ? x.x : x;\n    return new Vector3D(x, y, z);\n  }\n}","import { Matrix3D } from \"./matrix-3d\";\nimport { Vector3D } from \"./vector-3d\";\n\nfunction createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader {\n  const shader = gl.createShader(type);\n  if (!shader) throw new Error(\"gl.createShader() failed!\");\n\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!success) {\n    const msg = \"Compiling shader failed: \" + gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    throw new Error(msg);\n  }\n\n  return shader;\n}\n\nfunction createProgram(gl: WebGLRenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader): WebGLProgram {\n  const program = gl.createProgram();\n  if (!program) throw new Error(\"gl.createProgram() failed!\");\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!success) {\n    const msg = \"Linking program failed: \" + gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(msg);\n  }\n\n  return program;\n}\n\nfunction getUniformLocation(gl: WebGLRenderingContext, program: WebGLProgram, name: string): WebGLUniformLocation {\n  const loc = gl.getUniformLocation(program, name);\n\n  if (loc === null) {\n    throw new Error(`Unable to find uniform '${name}'!`);\n  }\n\n  return loc;\n}\n\nexport function getAttribLocation(gl: WebGLRenderingContext, program: WebGLProgram, name: string): number {\n  const loc = gl.getAttribLocation(program, name);\n\n  if (loc === -1) {\n    throw new Error(`Unable to find attribute '${name}'!`);\n  }\n\n  return loc;\n}\n\nexport class GlProgram {\n  readonly program: WebGLProgram;\n\n  constructor(readonly gl: WebGLRenderingContext, vertexShaderSrc: string, fragmentShaderSrc: string) {\n    const vertexShader = createShader(gl, WebGLRenderingContext.VERTEX_SHADER, vertexShaderSrc);\n    const fragmentShader = createShader(gl, WebGLRenderingContext.FRAGMENT_SHADER, fragmentShaderSrc);\n    this.program = createProgram(gl, vertexShader, fragmentShader);\n  }\n\n  activate() {\n    this.gl.useProgram(this.program);\n  }\n}\n\nclass GlUniformBase {\n  location: WebGLUniformLocation;\n\n  constructor(readonly program: GlProgram, name: string) {\n    this.location = getUniformLocation(program.gl, program.program, name);\n  }\n}\n\nexport class GlUniformVector3D extends GlUniformBase {\n  set(value: Vector3D) {\n    this.program.gl.uniform4fv(this.location, [value.x, value.y, value.z, value.w]);\n  }\n}\n\nexport class GlUniformFloat extends GlUniformBase {\n  set(value: number) {\n    this.program.gl.uniform1f(this.location, value);\n  }\n}\n\nexport class GlUniformMatrix3D extends GlUniformBase {\n  set(value: Matrix3D) {\n    this.program.gl.uniformMatrix4fv(this.location, false, value.toFloat32Array());\n  }\n}\n\nexport class GlUniformBoolean extends GlUniformBase {\n  set(value: boolean) {\n    this.program.gl.uniform1f(this.location, value ? 1 : 0);\n  }\n}\n\nexport class GlUniformInteger extends GlUniformBase {\n  set(value: number) {\n    this.program.gl.uniform1i(this.location, value);\n  }\n}\n\nexport function setupBuffer(gl: WebGLRenderingContext, value: Float32Array): WebGLBuffer {\n  const buffer = gl.createBuffer();\n\n  if (buffer === null) {\n    throw new Error(\"gl.createBuffer() failed!\");\n  }\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, value, gl.STATIC_DRAW);\n\n  return buffer;\n}\n\nfunction isPowerOfTwo(value: number): boolean {\n  const log2 = Math.log2(value);\n  return log2 === Math.floor(log2);\n}\n\nexport function setupTexture(gl: WebGLRenderingContext, pixels: ArrayBufferView, width: number, height?: number): WebGLTexture {\n  const texture = gl.createTexture();\n\n  if (texture === null) {\n    throw new Error(\"gl.createTexture() failed!\");\n  }\n\n  if (!height) {\n    height = width;\n  }\n\n  if (!(isPowerOfTwo(width) && isPowerOfTwo(height))) {\n    throw new Error(\"Texture dimensions must be powers of two!\");\n  }\n\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n  gl.generateMipmap(gl.TEXTURE_2D);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n  return texture;\n}\n","/**\n * Find an element.\n * \n * @param tagName The name of the element's HTML tag.\n * @param selector The selector for the element, not including its HTML tag.\n * @param parent The parent node to search within.\n */\nexport function getElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  selector: string,\n  parent: ParentNode = document\n): HTMLElementTagNameMap[K] {\n  const finalSelector = `${tagName}${selector}`;\n  const node = parent.querySelector(finalSelector);\n  if (!node) {\n    throw new Error(`Couldn't find any elements matching \"${finalSelector}\"`);\n  }\n  return node as HTMLElementTagNameMap[K];\n}\n","import { GlProgram, setupBuffer } from \"./webgl\";\nimport { Points3D } from \"./points-3d\";\n\nexport interface Points3DRendererProgram extends GlProgram {\n  positionAttributeLocation: number;\n}\n\nexport class Points3DRenderer {\n  buffer: WebGLBuffer;\n\n  constructor(readonly program: Points3DRendererProgram, readonly points: Points3D) {\n    const { gl } = program;\n    this.buffer = setupBuffer(gl, points.toFloat32Array());\n  }\n\n  setupForDrawing() {\n    const { gl, positionAttributeLocation } = this.program;\n\n    gl.enableVertexAttribArray(positionAttributeLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n\n    const vertexSize = 3;\n    const type = gl.FLOAT;\n    const normalize = false;\n    const stride = 0;\n    const offset = 0;\n    gl.vertexAttribPointer(positionAttributeLocation, vertexSize, type, normalize, stride, offset);\n  }\n\n  draw(primitiveType: number = WebGLRenderingContext.TRIANGLES) {\n    const { gl } = this.program;\n    const drawOffset = 0;\n    const count = this.points.length;\n    gl.drawArrays(primitiveType, drawOffset, count);  \n  }\n}\n","import { Vector3D } from \"./vector-3d\";\n\nexport class Points3D {\n  constructor(private readonly array: Vector3D[]) {\n  }\n\n  toFloat32Array(): Float32Array {\n    const { array } = this;\n    const result = new Float32Array(array.length * 3);\n    let arrIndex = 0;\n\n    for (let i = 0; i < result.length; i += 3) {\n      result[i] = array[arrIndex].x;\n      result[i + 1] = array[arrIndex].y;\n      result[i + 2] = array[arrIndex].z;\n      arrIndex += 1;\n    }\n\n    return result;\n  }\n\n  concat(points: Points3D): Points3D {\n    const combined = this.array.concat(points.array);\n    return new Points3D(combined);\n  }\n\n  map(fn: (v: Vector3D) => Vector3D) {\n    return new Points3D(this.array.map(fn));\n  }\n\n  get length(): number {\n    return this.array.length;\n  }\n\n  static fromArray(array: number[]|Float32Array) {\n    const numPoints = array.length / 3;\n    const pointArray = new Array<Vector3D>(numPoints);\n    let arrIndex = 0;\n    for (let i = 0; i < numPoints; i++) {\n      const x = array[arrIndex];\n      const y = array[arrIndex + 1];\n      const z = array[arrIndex + 2];\n      pointArray[i] = new Vector3D(x, y, z);\n      arrIndex += 3;\n    }\n    return new Points3D(pointArray);\n  }\n}\n","import { GlProgram, getAttribLocation, GlUniformInteger, GlUniformFloat, setupTexture } from \"../webgl\";\nimport { getElement } from \"../get-element\";\nimport { Points3D } from \"../points-3d\";\nimport { Points3DRenderer } from \"../points-3d-renderer\";\n\nconst vertexShaderSrc = require(\"./texture-fun-vertex-shader.glsl\") as string;\nconst fragmentShaderSrc = require(\"./texture-fun-fragment-shader.glsl\") as string;\n\nconst TEXTURE_SIZE = 64;\n\nclass TextureFunGlProgram extends GlProgram {\n  readonly positionAttributeLocation: number;\n  readonly sampler: GlUniformInteger;\n  readonly size: GlUniformFloat;\n  readonly phase: GlUniformFloat;\n\n  constructor(gl: WebGLRenderingContext) {\n    super(gl, vertexShaderSrc, fragmentShaderSrc);\n    this.positionAttributeLocation = getAttribLocation(gl, this.program, 'a_position');\n    this.sampler = new GlUniformInteger(this, 'u_sampler');\n    this.size = new GlUniformFloat(this, 'u_size');\n    this.phase = new GlUniformFloat(this, 'u_phase');\n  }\n\n  setupTextureForDrawing(texture: WebGLTexture, unit: number = 0) {\n    const { gl } = this;\n\n    // This assumes that the constant for gl.TEXTUREn is always the\n    // same as gl.TEXTURE0 + n, which *seems* to be the case. If it's\n    // not, I guess we could do dynamic property lookup.\n    gl.activeTexture(gl.TEXTURE0 + unit);\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.sampler.set(unit);\n  }\n}\n\nfunction makeTexture(size: number) {\n  const buffer = new Uint8Array(size * size * 4);\n  const GRADIENT_LENGTH = 8;\n  let i = 0;\n\n  for (let y = 0; y < size; y++) {\n    const yGrad = Math.floor((y % GRADIENT_LENGTH) / GRADIENT_LENGTH * 255);\n    for (let x = 0; x < size; x++) {\n      const red = yGrad;\n      const green = 0;\n      const blue = 90;\n      const alpha = 255;\n\n      buffer[i] = red;\n      buffer[i + 1] = green;\n      buffer[i + 2] = blue;\n      buffer[i + 3] = alpha;\n      i += 4;\n    }\n  }\n\n  return buffer;\n}\n\nwindow.onload = () => {\n  const canvas = getElement(\"canvas\", \"#canvas\");\n  const gl = canvas.getContext('webgl');\n\n  if (!gl) throw new Error(\"webgl is not supported on this browser!\");\n\n  const program = new TextureFunGlProgram(gl);\n\n  const square = Points3D.fromArray([\n    // Top-left\n    -1.0, 1.0, 0,\n    // Bottom-left\n    -1.0, -1.0, 0,\n    // Bottom-right\n    1.0, -1.0, 0,\n\n    // Top-left\n    -1.0, 1.0, 0,\n    // Bottom-right\n    1.0, -1.0, 0,\n    // Top-right\n    1.0, 1.0, 0\n  ]);\n\n  const renderer = new Points3DRenderer(program, square);\n  const texture = setupTexture(gl, makeTexture(TEXTURE_SIZE), TEXTURE_SIZE);\n\n  let phase = 0.0;\n\n  const render = () => {\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    program.activate();\n    program.size.set(canvas.width);\n    renderer.setupForDrawing();\n    program.setupTextureForDrawing(texture, 0);\n    program.phase.set(phase);\n\n    renderer.draw();\n\n    phase += 0.025;\n    window.requestAnimationFrame(render);\n  };\n\n  render();\n}\n","module.exports = \"precision mediump float;\\n\\nattribute vec4 a_position;\\n\\nvoid main() {\\n  gl_Position = a_position;\\n}\\n\";","module.exports = \"precision mediump float;\\n\\nuniform float u_size;\\nuniform float u_phase;\\nuniform sampler2D u_sampler;\\n\\nconst float PI = 3.1415926535897932384626433832795;\\n\\nvoid main() {\\n  float u = gl_FragCoord.x / u_size;\\n  float v = gl_FragCoord.y / u_size;\\n  float vShiftAmount = sin(gl_FragCoord.x / u_size * PI + u_phase);\\n\\n  v += vShiftAmount * 0.1;\\n\\n  gl_FragColor = texture2D(u_sampler, vec2(u, v));\\n}\\n\";"],"sourceRoot":""}